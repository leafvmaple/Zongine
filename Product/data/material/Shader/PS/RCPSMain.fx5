SamplerState RCLinearSampler : register(s0)                                                 
{                                                                                           
    Filter = MIN_MAG_MIP_LINEAR;                                                            
    AddressU = Clamp;                                                                       
    AddressV = Clamp;                                                                       
};                                                                                          
                                                                          
float4 RCSampleTexture2D(Texture2D i_Tex, SamplerState i_Sampler, float2 i_UV)              
{                                                                                           
    return i_Tex.Sample(i_Sampler, i_UV);                                                   
}

float4 ProcessMDOITComposite(float4 i_ColorSrc, float4 i_Color0, float4 i_Color1)
{
    if(i_Color1.r < 1)
    {
        float4 v4Temp = abs(i_Color0);
        if(isinf(v4Temp.x) || isinf(v4Temp.y) || isinf(v4Temp.z) ||isinf(v4Temp.w))
        {
            i_Color0.rgb = i_Color0.a;
        }
        
        float alpha = clamp((1.0 - i_Color1.r),0.0f,1.0f);
        
        float4 averageColor = float4(i_Color0.rgb / max(i_Color0.a, 0.00001), 1.0 - i_Color1.r);
        float3 l_FinalColor = lerp(i_ColorSrc.rgb, averageColor.rgb, alpha );
        return float4(l_FinalColor, clamp(i_ColorSrc.a + averageColor.a, 0.0f, 1.0f));
    }
    else
    {
        return i_ColorSrc;
    }
}

float4 ProcessWBOITComposite(float2 i_UV, float4 i_Pos, float4 i_ColorSrc, float4 i_Color0, float4 i_Color1)
{
    if(i_Color1.r < 1.0f)
    {
        float4 v4Temp = abs(i_Color0);
        if(isinf(v4Temp.x) || isinf(v4Temp.y) || isinf(v4Temp.z) || isinf(v4Temp.w))
        {
            i_Color0.rgb = i_Color0.a;
        }
        
        float revealage = i_Color1.r;
        
        float3 weightedColor = i_Color0.rgb / max(i_Color0.a, 0.00001f);
        
        float3 finalColor = (revealage * i_ColorSrc.rgb) + (1.0f - revealage) * weightedColor;

        return float4(finalColor, i_ColorSrc.a);
    }
    else
    {
        return i_ColorSrc;
    }
}

Texture2D g_Tex_0 : register( t0 );
Texture2D g_Tex_1 : register( t1 );
Texture2D g_Tex_2 : register( t2 );

float4 RCPSMain(float4 i_Pos : SV_POSITION, float2 i_UV : TEXCOORD0) : SV_TARGET0           
{                                                                                           
    float4 l_TexVal_0 = RCSampleTexture2D(g_Tex_0, RCLinearSampler, i_UV);
    float4 l_TexVal_1 = RCSampleTexture2D(g_Tex_1, RCLinearSampler, i_UV);
    float4 l_TexVal_2 = RCSampleTexture2D(g_Tex_2, RCLinearSampler, i_UV);
    return ProcessMDOITComposite(l_TexVal_0, l_TexVal_1, l_TexVal_2);
}